#!/bin/bash

set -e -u

exec 3>&1 # make stdout available as fd 3 for the result
exec 1>&2 # redirect all output to stderr for logging

#  _____ _____ _____  ______ _____ _      _____  ___   _____ _____   _____ ___  _____  _____
# |  __ \_   _|_   _| | ___ \  ___| |    |  ___|/ _ \ /  ___|  ___| |_   _/ _ \|  __ \/  ___|
# | |  \/ | |   | |   | |_/ / |__ | |    | |__ / /_\ \\ `--.| |__     | |/ /_\ \ |  \/\ `--.
# | | __  | |   | |   |    /|  __|| |    |  __||  _  | `--. \  __|    | ||  _  | | __  `--. \
# | |_\ \_| |_  | |   | |\ \| |___| |____| |___| | | |/\__/ / |___    | || | | | |_\ \/\__/ /
#  \____/\___/  \_/   \_| \_\____/\_____/\____/\_| |_/\____/\____/    \_/\_| |_/\____/\____/
#

validate_url() {
  if [[ $(wget -S --spider $1  2>&1 | egrep 'HTTP/1.1 200 OK|HTTP/1.1 302') ]]; then echo "true"; fi
}

tmpdir=${tmpdir:-/tmp}
payload="$(mktemp "${tmpdir}/git-release-tags.XXXXXX")"
cat > "${payload}" <&0

destination=$1
if [ -z "${destination}" ]
then
  echo "usage: $0 </path/to/destination>" >&2
  exit 1
fi

# From payload
api_token=$( jq -r '.source.token // ""' < ${payload})
# Use the access_token=? because the header value wasn't being passed in correctly, otherwise if not provided leave it out the token section from the requests
if [ -z "$api_token" ]; then api_token_header=""; else api_token_header="access_token=$api_token&"; fi
github_repo=$( jq -r '.source.repo // ""' < ${payload})
github_owner=$( jq -r '.source.owner // ""' < ${payload})
github_api_per_page=$( jq -r '.source.per_page // "20"' < ${payload})
release_name=$( jq -r '.source.tag_prefix // ""' < ${payload})
release_version_family=$( jq -r '.source.version_family // ""' < ${payload})
release_version=$( jq -r '.version.version // "latest"' < ${payload})
file_override=$( jq -r '.source.file_override // ""' < ${payload})
version="$(jq -r '.version // ""' < "${payload}")"

release_file=$release_name$release_version
file_url=https://github.com/${github_owner}/${github_repo}/archive/${release_file}.tar.gz
if [ ! -z $file_override ]
then
  file_url=https://github.com/${github_owner}/${github_repo}/releases/download/${release_name}${release_version}/${file_override}
fi
#echo $file_url
if [ $(validate_url $file_url) ]
then
  echo "valid"
  mkdir -p "${destination}"
  if [ ! -z $file_override ]
  then
    wget -O "${destination}/${file_override}" "${file_url}"
  else
    wget -O "${destination}/source.tar.gz" "${file_url}"
  fi
  echo "${release_version}" > "${destination}/version"
  echo "${file_url}" > "${destination}/url"
fi

jq -n "{
  version: ${version}
}" >&3
